#!/usr/bin/env bash
###
# File: cryptboot
# Author: Leopold Meinel (leo@meinel.dev)
# -----
# Copyright (c) 2025 Leopold Meinel & contributors
# SPDX ID: GPL-3.0-or-later
# URL: https://www.gnu.org/licenses/gpl-3.0-standalone.html
# -----
###

# Check if user is root
if [[ "${UID}" -ne 0 ]]; then
    echo "Permission denied (you must be root)"
    exit 1
fi

# Default config
EFI_DIR="/efi"
EFI_PATHS=("EFI/systemd/systemd-bootx64.efi" "EFI/BOOT/BOOTX64.EFI")
KERNEL_PATHS=("EFI/Linux")

# Load config file
if [[ -f "/etc/cryptboot.conf" ]]; then
    # shellcheck source=/dev/null
    . /etc/cryptboot.conf
else
    echo "/etc/cryptboot.conf doesn't exist!"
    exit
fi

# Check if EFI_DIR mountpoint exists
if ! findmnt -sn "${EFI_DIR}" &>/dev/null; then
    echo "Couldn't find EFI System partition mountpoint '${EFI_DIR}', check your /etc/fstab"
    exit 1
fi

# Main program
case "${1}" in
systemd-boot-sign)
    echo "Signing kernel with UEFI secure boot keys..."
    for path in "${EFI_PATHS[@]}"; do
        if [[ -f "${EFI_DIR}/${path}" ]]; then
            cryptboot-efikeys sign "${EFI_DIR}/${path}"
        fi
    done
    for path in "${KERNEL_PATHS[@]}"; do
        shopt -s nocaseglob
        for kernel in "${EFI_DIR}/${path}"/*.efi; do
            cryptboot-efikeys sign "${kernel}"
        done
    done

    sync
    ;;
*)
    echo "Usage: $(basename "${0}") systemd-boot-sign"
    echo ""
    echo "Manage UEFI Secure Boot keys"
    echo ""
    echo "Commands:"
    echo "    systemd-boot-sign  Sign kernel with UEFI secure boot keys"
    ;;
esac
